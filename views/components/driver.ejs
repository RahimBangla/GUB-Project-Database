<div class="container-fluid pb-3 pt-2">
   <div class="d-grid gap-3" style="grid-template-columns: 1fr 2fr;">
      <div class="bg-body-tertiary border rounded-3">
         <div class="p-5 mb-4 bg-body-tertiary rounded-3">
            <div class="py-5">
               <p class=" fw-bold" id="formTypeDriver">Create Driver</p>
               <form class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3" role="search">
                  <input type="text" class="form-control" placeholder="Driver Name" id="nameDriver">
                  <br>
                  <select class="form-select" aria-label="Default select" id="driversVehicleId">
                     <option selected>Open this select menu</option>

                  </select>
                  <br>
                  <input type="text" class="form-control" placeholder="nid_number" id="nid_numberDriver">
                  <br>
                  <input type="text" class="form-control" placeholder="license_number" id="license_numberDriver">
                  <br>
                  <input type="text" class="form-control" placeholder="contact_number" id="contact_numberDriver">
                  <br>
                  <input type="text" class="form-control" placeholder="age" id="ageDriver">
                  <br>
                  <button class="btn btn-primary btn-md" type="button" id="Driverbtn">Submit</button>
               </form>
            </div>
         </div>
      </div>
      <div class="bg-body-tertiary border rounded-3">
         <div class="container-fluid py-5">
            <button class="btn btn-success mb-3" id="addDriver">Add
               New
            </button>
            <table class="table">
               <thead>
                  <tr>
                     <th scope="col">#Driver Id</th>
                     <th scope="col">vehicle_id</th>
                     <th scope="col">nid_number</th>
                     <th scope="col">license_number</th>
                     <th scope="col">contact_number</th>
                     <th scope="col">age</th>
                     <th scope="col">Actions</th>
                  </tr>
               </thead>
               <tbody id="DriverTr">

               </tbody>
            </table>
         </div>
      </div>
   </div>
</div>

<script>


   //get data array object and show in table  using fetch api
   const getDriver = async () => {
      const response = await fetch('/api/Drivers');
      const data = await response.json();
      console.log(data);
      let html = ``;
      data.data.forEach(Driver => {
         html += `
            <tr>
               <th scope="row">${Driver.driver_id}</th>
               <td>${Driver.vehicle_id}</td>
               <td>${Driver.nid_number}</td>
               <td>${Driver.license_number}</td>
               <td>${Driver.contact_number}</td>
               <td>${Driver.age}</td>
               <td>
                  <button class="btn btn-warning btn-sm"  onclick="editDriver(${Driver.driver_id})">Edit</button>
                  <button class="btn btn-danger btn-sm" onclick="deleteDriver(${Driver.driver_id})">Delete</button>
               </td>
            </tr>
         `;
      });
      DriverTr.innerHTML = html;
   }
   getDriver();

   //add Driver
   const addDriver = async () => {
      const name = document.getElementById('nameDriver').value;
      const vehicle_id = document.getElementById('driversVehicleId').value;
      const nid_number = document.getElementById('nid_numberDriver').value;
      const license_number = document.getElementById('license_numberDriver').value;
      const contact_number = document.getElementById('contact_numberDriver').value;
      const age = document.getElementById('ageDriver').value;

      const response = await fetch('/api/Drivers', {
         method: 'POST',
         headers: {
            'Content-Type': 'application/json'
         },
         body: JSON.stringify({
            name: name,
            vehicle_id: vehicle_id,
            nid_number: nid_number,
            license_number: license_number,
            contact_number: contact_number,
            age: age
         })
      });
      const data = await response.json();
      console.log(data);
      if (data.status === true) {
         getDriver();
         document.getElementById('nameDriver').value = '';
         document.getElementById('driversVehicleId').value = 'Select Item Vehicle';
         document.getElementById('nid_numberDriver').value = '';
         document.getElementById('license_numberDriver').value = '';
         document.getElementById('contact_numberDriver').value = '';
         document.getElementById('ageDriver').value = '';


         document.getElementById('tosttittle').innerHTML = 'Success';
         document.getElementById('tostbody').innerHTML = 'Driver added successfully';
         var toastLiveExample = document.getElementById('liveToast')
         var toast = new bootstrap.Toast(toastLiveExample)
         toast.show()
      } else {
         document.getElementById('tosttittle').innerHTML = 'Error';
         document.getElementById('tostbody').innerHTML = 'Driver added failed';
         var toastLiveExample = document.getElementById('liveToast')
         var toast = new bootstrap.Toast(toastLiveExample)
         toast.show()
      }
   }
   let Driverbtn = document.getElementById('Driverbtn');
   Driverbtn.addEventListener('click', addDriver);

   //delete Driver
   const deleteDriver = async (id) => {
      const response = await fetch(`/api/Drivers/${id}`, {
         method: 'DELETE'
      });
      const data = await response.json();
      console.log(data);
      if (data.status === true) {
         getDriver();
         document.getElementById('tosttittle').innerHTML = 'Success';
         document.getElementById('tostbody').innerHTML = 'Driver deleted successfully';
         var toastLiveExample = document.getElementById('liveToast')
         var toast = new bootstrap.Toast(toastLiveExample)
         toast.show()
      } else {
         document.getElementById('tosttittle').innerHTML = 'Error';
         document.getElementById('tostbody').innerHTML = 'Driver deleted failed';
         var toastLiveExample = document.getElementById('liveToast')
         var toast = new bootstrap.Toast(toastLiveExample)
         toast.show()
      }
   }
   //edit Driver in id formType change for eidt Driver
   const editDriver = async (id) => {
      document.getElementById('formTypeDriver').innerHTML = 'Edit Driver';
      const response = await fetch(`/api/Drivers/${id}`);
      const data = await response.json();
      console.log(data);
      document.getElementById('nameDriver').value = data.name;
      document.getElementById('driversVehicleId').value = data.vehicle_id;
      document.getElementById('nid_numberDriver').value = data.nid_number;
      document.getElementById('license_numberDriver').value = data.license_number;
      document.getElementById('contact_numberDriver').value = data.contact_number;
      document.getElementById('ageDriver').value = data.age;


      Driverbtn.innerHTML = 'Update';
      Driverbtn.removeEventListener('click', addDriver);
      Driverbtn.addEventListener('click', () => updateDriver(id));
   }

   //update Driver
   const updateDriver = async (id) => {
      const name = document.getElementById('nameDriver').value;
      const vehicle_id = document.getElementById('driversVehicleId').value;
      const nid_number = document.getElementById('nid_numberDriver').value;
      const license_number = document.getElementById('license_numberDriver').value;
      const contact_number = document.getElementById('contact_numberDriver').value;
      const age = document.getElementById('ageDriver').value;
      const response = await fetch(`/api/Drivers/${id}`, {
         method: 'PATCH',
         headers: {
            'Content-Type': 'application/json'
         },
         body: JSON.stringify({
            name: name,
            vehicle_id: vehicle_id,
            nid_number: nid_number,
            license_number: license_number,
            contact_number: contact_number,
            age: age
         })
      });
      const data = await response.json();
      console.log(data);
      if (data.status === true) {
         getDriver();
         document.getElementById('nameDriver').value = '';
         document.getElementById('driversVehicleId').value = 'Select Item Vehicle';
         document.getElementById('nid_numberDriver').value = '';
         document.getElementById('license_numberDriver').value = '';
         document.getElementById('contact_numberDriver').value = '';
         document.getElementById('ageDriver').value = '';
         document.getElementById('formTypeDriver').innerHTML = 'Create Driver';
         Driverbtn.innerHTML = 'Submit';
         Driverbtn.removeEventListener('click', updateDriver);
         Driverbtn.addEventListener('click', addDriver);
         document.getElementById('tosttittle').innerHTML = 'Success';
         document.getElementById('tostbody').innerHTML = 'Driver updated successfully';
         var toastLiveExample = document.getElementById('liveToast')
         var toast = new bootstrap.Toast(toastLiveExample)
         toast.show()
      } else {
         document.getElementById('tosttittle').innerHTML = 'Error';
         document.getElementById('tostbody').innerHTML = 'Driver updated failed';
         var toastLiveExample = document.getElementById('liveToast')
         var toast = new bootstrap.Toast(toastLiveExample)
         toast.show()
      }
   }
   // add new update when edit Driver  avalabe in id createDriver
   const createDriver2 = document.getElementById('addDriver');
   createDriver2.addEventListener('click', () => {
      document.getElementById('nameDriver').value = '';
      document.getElementById('driversVehicleId').value = 'Select Item Vehicle';
      document.getElementById('nid_numberDriver').value = '';
      document.getElementById('license_numberDriver').value = '';
      document.getElementById('contact_numberDriver').value = '';
      document.getElementById('ageDriver').value = '';
      document.getElementById('formTypeDriver').innerHTML = 'Create Driver';
      Driverbtn.innerHTML = 'Submit';
      Driverbtn.removeEventListener('click', updateDriver);
      Driverbtn.addEventListener('click', addDriver);
   })


</script>