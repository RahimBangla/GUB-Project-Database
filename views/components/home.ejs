<div class="container-fluid pb-3 pt-2">
   <div class="d-grid gap-3">
      <div class="bg-body-tertiary border rounded-3">
         <div class="container-fluid py-2 d-flex gap-3 justify-content-center">
            <div class="card border-primary" style="max-width: 18rem;">
               <div class="card-header text-center">Today Injure</div>
               <div class="card-body text-primary text-center">
                  <h5 class="card-title" id="todayInjureCount">0</h5>
               </div>
            </div>
            <div class="card border-primary" style="max-width: 18rem;">
               <div class="card-header text-center">Yesterday Injure</div>
               <div class="card-body text-primary text-center">
                  <h5 class="card-title" id="yesterdayInjure">0</h5>
               </div>
            </div>
            <div class="card border-primary" style="max-width: 18rem;">
               <div class="card-header text-center">This Month Injure</div>
               <div class="card-body text-primary text-center">
                  <h5 class="card-title" id="monthInjure">0</h5>
               </div>
            </div>
            <div class="card border-primary" style="max-width: 18rem;">
               <div class="card-header text-center fw-bold">Total Injure</div>
               <div class="card-body text-primary text-center">
                  <h5 class="card-title" id="totalInjureCount" style="color: red;">0</h5>
               </div>
            </div>
         </div>
      </div>
   </div>
</div>
<div id="chart">
   <div id="timeline-chart"></div>
</div>
<div class="container-fluid pb-3 pt-2">
   <div class="d-grid gap-3">
      <div class="bg-body-tertiary border rounded-3">
         <div class="container-fluid py-2">
            <h5 class="">Accident List</h5>
            <div class="d-flex justify-content-end">
               <div class="input-group mb-3">
                  <input type="text" class="form-control" placeholder="Search" aria-label="Search"
                     aria-describedby="accidentSearchBtn" id="accidentSearch">
                  <button class="btn btn-outline-secondary" type="button" id="accidentSearchBtn">Search</button>
               </div>
            </div>
            <table class="table">
               <thead>
                  <tr>
                     <th scope="col">#Accident Id</th>
                     <th scope="col">victim </th>
                     <th scope="col">vehicle </th>
                     <th scope="col">police </th>
                     <th scope="col">witness </th>
                     <th scope="col">location</th>
                     <th scope="col">date_occurred</th>
                     <th scope="col">description</th>
                     <th scope="col">status</th>
                  </tr>
               </thead>
               <tbody id="AccidentTable">

               </tbody>
            </table>
         </div>
      </div>
   </div>
</div>

<script>
   const getAccidentCount = async () => {
      const response = await fetch('/api/accident/chart');
      const data = await response.json();
      console.log(data.data);
      return data.data;
   }
   const AccidentTable = document.getElementById('AccidentTable');
   //get data array object and show in table  using fetch api
   const getAccidentAll = async () => {
      const response = await fetch('/api/accident/all');
      const data = await response.json();
      console.log(data);
      let html = ``;
      data.data.forEach(Accident => {
         var date = new Date(Accident.date_occurred);
         html += `
            <tr>
               <th scope="row">${Accident.case_id}</th>
               <td>${Accident.victim_id}</td>
               <td>${Accident.vehicle_id}</td>
               <td>${Accident.police_id}</td>
               <td>${Accident.witness_id}</td>
               <td>${Accident.location}</td>
               <td>${date.getDate()}-${date.getMonth()}-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} </td>
               <td>${Accident.description}</td>
               <td>${Accident.status}</td>
            </tr>
         `;
      });
      AccidentTable.innerHTML = html;
   }
   getAccidentAll();

   const todayInjure = document.getElementById('todayInjureCount');
   const yesterdayInjure = document.getElementById('yesterdayInjure');
   const monthInjure = document.getElementById('monthInjure');
   const totalInjureCount = document.getElementById('totalInjureCount');
   //get data array object and show in table  using fetch api
   const getInjureAll = async () => {
      const response = await fetch('/api/injure');
      const data = await response.json();
      console.log(data);
      // get count and show in card
      todayInjure.innerHTML = data.data.today || 0;
      yesterdayInjure.innerHTML = data.data.yesterday || 0;
      monthInjure.innerHTML = data.data.month || 0;
      totalInjureCount.innerHTML = data.data.total || 0;
   }
   getInjureAll();
   //get data array object and show in table  using search fetch api
   const accidentSearch = document.getElementById('accidentSearch');
   const accidentSearchBtn = document.getElementById('accidentSearchBtn');
   accidentSearchBtn.addEventListener('click', async () => {
      const response = await fetch(`/api/accident/all/${accidentSearch.value}`);
      const data = await response.json();
      console.log(data);
      let html = ``;
      data.data.forEach(Accident => {
         var date = new Date(Accident.date_occurred);
         html += `
            <tr>
               <th scope="row">${Accident.case_id}</th>
               <td>${Accident.victim_id}</td>
               <td>${Accident.vehicle_id}</td>
               <td>${Accident.police_id}</td>
               <td>${Accident.witness_id}</td>
               <td>${Accident.location}</td>
               <td>${date.getDate()}-${date.getMonth()}-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} </td>
               <td>${Accident.description}</td>
               <td>${Accident.status}</td>
            </tr>
         `;
      });
      AccidentTable.innerHTML = html;
   });

   async function chartData() {
      var options = {
         chart: {
            type: "area",
            height: 300,
            foreColor: "#999",
            stacked: true,
            dropShadow: {
               enabled: true,
               enabledSeries: [0],
               top: -2,
               left: 2,
               blur: 5,
               opacity: 0.06
            }
         },
         colors: ['#00E396', '#0090FF'],
         stroke: {
            curve: "smooth",
            width: 3
         },
         dataLabels: {
            enabled: false
         },
         series: [{
            name: 'Total Accident',
            data: await getAccidentCount()
         },
            // {
            //    name: 'Unique Views',
            //    data: generateDayWiseTimeSeries(1, 18)
            // }
         ],
         markers: {
            size: 0,
            strokeColor: "#fff",
            strokeWidth: 3,
            strokeOpacity: 1,
            fillOpacity: 1,
            hover: {
               size: 6
            }
         },
         xaxis: {
            type: "datetime",
            axisBorder: {
               show: false
            },
            axisTicks: {
               show: false
            }
         },
         yaxis: {
            labels: {
               offsetX: 14,
               offsetY: -5
            },
            tooltip: {
               enabled: true
            }
         },
         grid: {
            padding: {
               left: -5,
               right: 5
            }
         },
         tooltip: {
            x: {
               format: "dd MMM yyyy"
            },
         },
         legend: {
            position: 'top',
            horizontalAlign: 'left'
         },
         fill: {
            type: "solid",
            fillOpacity: 0.7
         }
      };

      var chart = new ApexCharts(document.querySelector("#timeline-chart"), options);
      console.log(chart);
      chart.render();
   }

   function generateDayWiseTimeSeries(s, count) {
      var values = [[
         4, 3, 10, 9, 29, 19, 25, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5
      ], [
         2, 3, 8, 7, 22, 16, 23, 7, 11, 5, 12, 5, 10, 4, 15, 2, 6, 2
      ]];
      var i = 0;
      var series = [];
      var lastDate = new Date().setDate(new Date().getDate() - 17);
      var x = new Date(lastDate).getTime();
      while (i < count) {
         series.push([x, values[s][i]]);
         x += 86400000;
         i++;
      }
      console.log(series);
      return series;
   }

   chartData();
</script>